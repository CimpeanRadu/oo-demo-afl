<?xml version="1.0" encoding="UTF-8"?>
<flow id="4bbd79d4-3346-496c-8309-4a7e8ab100a3">
  <descriptionCdata><![CDATA[4bbd79d4-3346-496c-8309-4a7e8ab100a3.2da5d625-f5d3-4442-9d23-11598cc95224.description=<pre>This operation reads the content of a file. The operation can be used to read the entire file content in one step or to iterate the file line by line.\n\nInputs\:\n    source - The full path and filename of the file to be read. A UNC path can be supported as the source file path.\n    filter - The string to filter on (leave blank for no filter). If this filter is not blank, all rows that contain the filter string will be returned. If no match is found, no lines will be returned.\n    iterate - Determines whether the content of the file should be iterated or not. If set to "true", the content of the file will be iterated row by row and for each subsequent call, the next row will be returned. If set to "false", the content of the file will not be iterated and only the number of lines that matched the "filter" will be returned.\nValid values\: true, false\n    delimiter \u2013 If specified, the entire content of the file  will be read, the specified value will be used as a delimiter between the rows and  the resulting content will be returned. If left blank, the next row will be returned for each subsequent call. \n    eofReset - If set to true, after the No More response has been returned once, the operation will restart reading the file from the beginning on the next call.\nValid values\: true, false\n    characterSet - The character set of the file to read from. For invalid or empty input value the default encoding will be used. \nValid values\: UTF-8, UTF-16 and UTF-32 \nDefault value\: UTF-8\n\nResults\:\n    returnCode - This is the primary output. It is 0 if the operation completed successfully  (or if more rows are available when iterate is set to true), 1 if no more items (if iterate is set to true) and -1 in case of failure. \n    count - The number of lines that matched the filter, or if no filter specified, the total lines read (if iterate is false, or delimiter is not null). Otherwise, it returns the number of rows available for retrieval from the source file.\n    returnResult - Each row by turn (if iterate is true and delimiter is blank) or all rows separated by the delimiter (if iterate is true and delimiter is not blank).\n    exception - An exception message if the operation fails.\n\nResponses\:\n    success - The operation successfully read the file (if iterate is true, more rows are available).\n    no more items - No more items are available for retrieval (if iterate is set to true).\n    failure - The operation failed to read the file.\n\nNotes\:\n1. The "filter" and "eofReset" fields are taken into consideration only if iterate is set to true. Otherwise, they have no impact on the result.\n2. Note that the "filter" match is not performed based on a regular expression, although the filter field may contain one. The operation only checks for each row if it contains the string given as filter. \n3. If i"terate" is set to "true" and "delimiter" is not null, the entire file may or may not still be fully read at once, depending on size. \n4. If "iterate" is set to "true", then all matching lines are pushed into the Session and then, subsequent calls to the operation, result in the next line being returned.\n5. If the value provided in the "delimiter" field is not null, the entire file will be read once and returned regardless of the value of the "iterate" field.\n\nExamples\:\n    The following examples are used to illustrate the behavior of the operation for three specific use cases. For these examples, the operation will use as the input source a file called "example.txt", with the absolute path "C\:\\Program Files\\example.txt" and the following content\:\n        "line1\n         line2\n         line3\n         line4"\n1. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "true" and the "delimiter" input field is not left blank\:\n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: true\n        delimiter\: ,\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the "returnResult" output field of the operation will have the following value\: line1,line2,line3,line4\n2. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "true" and the delimiter input field is left blank\:\n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: true\n        delimiter\:\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the file will be iterated row by row in four subsequent calls. At each call, the "returnResult" output field of the operation will contain the value of one line from the file, in the same order as they are found in the source file (i.e. line1, line2, lin3, line4). \n3. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "false" and the "delimiter" input field is left blank\:       \n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: false\n        delimiter\:\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the "returnResult" output field of the operation will be blank and the count output field will contain the value 4 (representing the number of lines in the file).\n \n</pre>\n
4bbd79d4-3346-496c-8309-4a7e8ab100a3.30ddc97b-dd70-4183-b511-a1105094bec0.description=<pre>This operation reads the content of a file. The operation can be used to read the entire file content in one step or to iterate the file line by line.\n\nInputs\:\n    source - The full path and filename of the file to be read. A UNC path can be supported as the source file path.\n    filter - The string to filter on (leave blank for no filter). If this filter is not blank, all rows that contain the filter string will be returned. If no match is found, no lines will be returned.\n    iterate - Determines whether the content of the file should be iterated or not. If set to "true", the content of the file will be iterated row by row and for each subsequent call, the next row will be returned. If set to "false", the content of the file will not be iterated and only the number of lines that matched the "filter" will be returned.\nValid values\: true, false\n    delimiter \u2013 If specified, the entire content of the file  will be read, the specified value will be used as a delimiter between the rows and  the resulting content will be returned. If left blank, the next row will be returned for each subsequent call. \n    eofReset - If set to true, after the No More response has been returned once, the operation will restart reading the file from the beginning on the next call.\nValid values\: true, false\n    characterSet - The character set of the file to read from. For invalid or empty input value the default encoding will be used. \nValid values\: UTF-8, UTF-16 and UTF-32 \nDefault value\: UTF-8\n\nResults\:\n    returnCode - This is the primary output. It is 0 if the operation completed successfully  (or if more rows are available when iterate is set to true), 1 if no more items (if iterate is set to true) and -1 in case of failure. \n    count - The number of lines that matched the filter, or if no filter specified, the total lines read (if iterate is false, or delimiter is not null). Otherwise, it returns the number of rows available for retrieval from the source file.\n    returnResult - Each row by turn (if iterate is true and delimiter is blank) or all rows separated by the delimiter (if iterate is true and delimiter is not blank).\n    exception - An exception message if the operation fails.\n\nResponses\:\n    success - The operation successfully read the file (if iterate is true, more rows are available).\n    no more items - No more items are available for retrieval (if iterate is set to true).\n    failure - The operation failed to read the file.\n\nNotes\:\n1. The "filter" and "eofReset" fields are taken into consideration only if iterate is set to true. Otherwise, they have no impact on the result.\n2. Note that the "filter" match is not performed based on a regular expression, although the filter field may contain one. The operation only checks for each row if it contains the string given as filter. \n3. If i"terate" is set to "true" and "delimiter" is not null, the entire file may or may not still be fully read at once, depending on size. \n4. If "iterate" is set to "true", then all matching lines are pushed into the Session and then, subsequent calls to the operation, result in the next line being returned.\n5. If the value provided in the "delimiter" field is not null, the entire file will be read once and returned regardless of the value of the "iterate" field.\n\nExamples\:\n    The following examples are used to illustrate the behavior of the operation for three specific use cases. For these examples, the operation will use as the input source a file called "example.txt", with the absolute path "C\:\\Program Files\\example.txt" and the following content\:\n        "line1\n         line2\n         line3\n         line4"\n1. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "true" and the "delimiter" input field is not left blank\:\n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: true\n        delimiter\: ,\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the "returnResult" output field of the operation will have the following value\: line1,line2,line3,line4\n2. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "true" and the delimiter input field is left blank\:\n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: true\n        delimiter\:\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the file will be iterated row by row in four subsequent calls. At each call, the "returnResult" output field of the operation will contain the value of one line from the file, in the same order as they are found in the source file (i.e. line1, line2, lin3, line4). \n3. This is a valid inputs example for reading the content of a file, when the "iterate" input field is set to "false" and the "delimiter" input field is left blank\:       \n        source\: C\:\\Program Files\\example.txt\n        filter\:\n        iterate\: false\n        delimiter\:\n        eofReset\: false\n        characterSet\: UTF-8\n    In this case, the "returnResult" output field of the operation will be blank and the count output field will contain the value 4 (representing the number of lines in the file).\n \n</pre>\n
4bbd79d4-3346-496c-8309-4a7e8ab100a3.39f15565-8e10-4a7c-a0c7-9f6d6a052204.prompt=Source File\:
4bbd79d4-3346-496c-8309-4a7e8ab100a3.9209dd93-f3fc-44aa-82e7-9489bf79ea1d.prompt=Source File\:
]]></descriptionCdata>
  <annotation></annotation>
  <name>Full Step Persistence</name>
  <categories/>
  <inputs/>
  <possibleResponses>
    <opResponse id="795ec4a7-fa55-41a9-b7a0-2bb8af6c95aa">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="690f6948-96ce-4ce9-a804-3b7312280b07">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="6e87608c-3ef7-4136-89d1-df190a82670c">
    <annotation></annotation>
    <name>FailureMessage</name>
    <fieldName>FailureMessage</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="e4a7adfb-65bf-483d-a5cd-dd68771dd2e2">
    <baseIcon>flow.png</baseIcon>
    <basePath>System</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <callouts/>
  <checkPointFlow>true</checkPointFlow>
  <compatibleRuntimeContext>false</compatibleRuntimeContext>
  <historyCheckPointFlow>true</historyCheckPointFlow>
  <steps>
    <step id="2da5d625-f5d3-4442-9d23-11598cc95224">
      <annotation>4bbd79d4-3346-496c-8309-4a7e8ab100a3.2da5d625-f5d3-4442-9d23-11598cc95224.description</annotation>
      <name>Read from File - Detailed</name>
      <bounds>
        <x>79.0</x>
        <y>53.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <userInputBinding id="9209dd93-f3fc-44aa-82e7-9489bf79ea1d">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>source</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt>4bbd79d4-3346-496c-8309-4a7e8ab100a3.9209dd93-f3fc-44aa-82e7-9489bf79ea1d.prompt</prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="5b5f22ed-b509-4395-a2f1-5b5ec8d4d0ef">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>filter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="272b9e3e-723b-45e7-bb49-c2ac20247a7d">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>iterate</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>false</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="90815764-5924-482d-aef0-1de61e51e0c8">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>delimiter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>\n\r</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="7c35e3bc-ebb3-46df-b25d-b18c1efadd8d">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>eofReset</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="d38a13fc-73f4-4958-850f-3ef6b72df51e">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>characterSet</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="5f3a6d28-c8c7-4df8-b3ef-d4b6b2ebbbd5">
          <annotation></annotation>
          <name>no more items</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>no more items</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>30ddc97b-dd70-4183-b511-a1105094bec0</refId>
          </destination>
          <source>
            <refId>2da5d625-f5d3-4442-9d23-11598cc95224</refId>
          </source>
          <positions>
            <point>
              <x>129.0</x>
              <y>87.0</y>
            </point>
            <point>
              <x>341.0</x>
              <y>88.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="0ea3a01c-a162-481d-8f39-48c9048e191a">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>30ddc97b-dd70-4183-b511-a1105094bec0</refId>
          </destination>
          <source>
            <refId>2da5d625-f5d3-4442-9d23-11598cc95224</refId>
          </source>
          <positions>
            <point>
              <x>129.0</x>
              <y>87.0</y>
            </point>
            <point>
              <x>189.11725573022727</x>
              <y>62.283293838651176</y>
            </point>
            <point>
              <x>281.11859070261005</x>
              <y>62.71726239984166</y>
            </point>
            <point>
              <x>341.0</x>
              <y>88.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="caa1943b-0bc6-4b1c-8b6f-9e242beca509">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>1d7fb7e7-68a8-47d2-a8bb-3f554105cacb</refId>
          </destination>
          <source>
            <refId>2da5d625-f5d3-4442-9d23-11598cc95224</refId>
          </source>
          <positions>
            <point>
              <x>129.0</x>
              <y>87.0</y>
            </point>
            <point>
              <x>208.0</x>
              <y>212.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>4abea273-5547-4281-8ab0-98f503148a2b</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="cced3f35-7af1-44a3-85f5-ac1d49576b8f">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>returnResultD</contextKey>
          <expression id="d8eaaa4c-463d-468b-bdda-f76d0793ae18">
            <annotation></annotation>
            <name>Result: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="5ccf5697-a7ca-4edb-9b05-399e74f94c07">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>returnResult</contextKey>
          <expression id="e7197924-84da-4973-b91b-87a141456539">
            <annotation></annotation>
            <name>Result: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="30ddc97b-dd70-4183-b511-a1105094bec0">
      <annotation>4bbd79d4-3346-496c-8309-4a7e8ab100a3.30ddc97b-dd70-4183-b511-a1105094bec0.description</annotation>
      <name>Read from File - Concise</name>
      <bounds>
        <x>291.0</x>
        <y>54.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <stepPersistence>basic</stepPersistence>
      <bindings>
        <userInputBinding id="39f15565-8e10-4a7c-a0c7-9f6d6a052204">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>source</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt>4bbd79d4-3346-496c-8309-4a7e8ab100a3.39f15565-8e10-4a7c-a0c7-9f6d6a052204.prompt</prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="0c2807ce-0e70-4902-af79-29e9e9630dae">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>filter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="8909b115-fbe5-4803-9b96-a863d2c05a5d">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>iterate</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>false</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="1c1ffbdd-b9cc-4476-baf1-7d107fcc9e6d">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>delimiter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>\n\r</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="28565ac3-8af7-4505-acae-7400b70192b3">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>eofReset</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
        <staticBinding id="7fd310c3-bfe1-48e5-934b-1b27c6b306d7">
          <annotation></annotation>
          <toContextKey></toContextKey>
          <fromContextKey></fromContextKey>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>characterSet</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="356f8cd5-99a8-4dd1-b691-d0df76c1088a">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>71c514df-150c-4164-9115-54618b208142</refId>
          </destination>
          <source>
            <refId>30ddc97b-dd70-4183-b511-a1105094bec0</refId>
          </source>
          <positions>
            <point>
              <x>341.0</x>
              <y>88.0</y>
            </point>
            <point>
              <x>555.0</x>
              <y>80.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="557593e0-92bb-4d82-a362-d573a9349f4e">
          <annotation></annotation>
          <name>no more items</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>no more items</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>71c514df-150c-4164-9115-54618b208142</refId>
          </destination>
          <source>
            <refId>30ddc97b-dd70-4183-b511-a1105094bec0</refId>
          </source>
          <positions>
            <point>
              <x>341.0</x>
              <y>88.0</y>
            </point>
            <point>
              <x>401.89204591731595</x>
              <y>110.74112451053134</y>
            </point>
            <point>
              <x>495.9758082519269</x>
              <y>107.2239745167141</y>
            </point>
            <point>
              <x>555.0</x>
              <y>80.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="3fb75873-c34c-42a2-a217-4167ace62d87">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>1d7fb7e7-68a8-47d2-a8bb-3f554105cacb</refId>
          </destination>
          <source>
            <refId>30ddc97b-dd70-4183-b511-a1105094bec0</refId>
          </source>
          <positions>
            <point>
              <x>341.0</x>
              <y>88.0</y>
            </point>
            <point>
              <x>208.0</x>
              <y>212.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>4abea273-5547-4281-8ab0-98f503148a2b</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="e782d4f9-d1ab-49e1-9131-51cac9abb625">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>returnResult</contextKey>
          <expression id="a22e3604-e327-494f-8198-18b36f983f0b">
            <annotation></annotation>
            <name>Result: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="12967273-f180-44db-8136-8ee3f8ce6bbd">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>returnResultC</contextKey>
          <expression id="fb5cfc9a-6732-49eb-ba8e-a314effc91f3">
            <annotation></annotation>
            <name>Result: returnResult</name>
            <fieldName>returnResult</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="71c514df-150c-4164-9115-54618b208142">
      <annotation></annotation>
      <name>Resolved : success</name>
      <bounds>
        <x>505.0</x>
        <y>46.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="b0eca82b-71d3-4b1e-9a3f-5af26c74b9dc">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>71c514df-150c-4164-9115-54618b208142</refId>
          </destination>
          <source>
            <refId>71c514df-150c-4164-9115-54618b208142</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>RESOLVED</returnStepType>
      <assignments/>
    </returnStep>
    <returnStep id="1d7fb7e7-68a8-47d2-a8bb-3f554105cacb">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>193.0</x>
        <y>205.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="b9dce82d-0876-4d55-a9d2-17266651132a">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>1d7fb7e7-68a8-47d2-a8bb-3f554105cacb</refId>
          </destination>
          <source>
            <refId>1d7fb7e7-68a8-47d2-a8bb-3f554105cacb</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
  </steps>
  <startSteps>2da5d625-f5d3-4442-9d23-11598cc95224</startSteps>
</flow>